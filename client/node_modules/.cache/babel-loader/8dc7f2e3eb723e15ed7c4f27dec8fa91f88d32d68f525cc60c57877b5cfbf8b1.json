{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\VS_CODE\\\\Moj\\\\client\\\\src\\\\pages\\\\Dashboard.js\";\nimport TinderCard from 'react-tinder-card';\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport ChatContainer from '../components/ChatContainer';\nimport { useCookies } from 'react-cookie';\nimport axios from 'axios';\nimport black from \"../images/black_screen.jpg\";\nimport Dropdown from \"../components/UserFilter\";\nimport UserInfo from '../components/UserInfo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  //     const [user, setUser] = useState(null)\n  //     const [fieldofUsers, setfieldofUsers] = useState(null)\n  //     const [lastDirection, setLastDirection] = useState()\n  //     const [filteron, setfilteron] = useState(true);\n  //     const [cookies, setCookie] = useCookies(['user'])\n  //     const [infoModel, setInfoModel] = React.useState(false)\n\n  //     const userId = cookies.UserId\n\n  //     const handleClick = () => {\n  //         setInfoModel(true)\n  //     }\n\n  //     const getUser = async () => {\n  //         try {\n  //             const response = await axios.get('http://localhost:8000/user', {\n  //                 params: { userId }\n  //             })\n  //             setUser(response.data)\n\n  //         } catch (error) {\n  //             console.log(error)\n  //         }\n  //     }\n  //     const getfieldofUsers = async () => {\n  //         try {\n  //             const response = await axios.get('http://localhost:8000/field-users', {\n  //                 params: { field: user?.field }\n  //             })\n  //             setfieldofUsers(response.data)\n\n  //         } catch (error) {\n  //             console.log(error)\n  //         }\n  //     }\n\n  //     useEffect(() => {\n  //         getUser()\n  //         //eslint-disable-next-line react-hooks/exhaustive-deps\n  //     }, [])\n\n  //     useEffect(() => {\n  //         if (user) {\n  //             getfieldofUsers()\n  //         }\n  //         //eslint-disable-next-line react-hooks/exhaustive-deps\n  //     }, [user]);\n\n  //     const updateMatches = async (matchedUserId) => {\n  //         try {\n  //             await axios.put('http://localhost:8000/addmatch', {\n  //                 userId,\n  //                 matchedUserId\n  //             })\n  //             getUser()\n\n  //         } catch (err) {\n  //             console.log(err)\n  //         }\n  //     }\n\n  //     const swiped = (direction, swipedUserId) => {\n  //         if (direction === 'right') {\n  //             updateMatches(swipedUserId)\n  //         }\n  //         setLastDirection(direction)\n  //     }\n\n  //     const outOfFrame = (name) => {\n  //         console.log(name + ' left the screen!')\n  //     }\n\n  //     const matchedUserIds = user?.matches.map(({ user_id }) => user_id).concat(userId)\n\n  //     const filteredUsers = fieldofUsers?.filter(fieldofUser => !matchedUserIds.includes(fieldofUser.user_id))\n\n  //     console.log('filteredGenderedUsers ', filteredUsers)\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n};\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["TinderCard","React","useEffect","useState","ChatContainer","useCookies","axios","black","Dropdown","UserInfo","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Study/VS_CODE/Moj/client/src/pages/Dashboard.js"],"sourcesContent":["import TinderCard from 'react-tinder-card'\r\nimport React from 'react'\r\nimport { useEffect, useState } from 'react'\r\nimport ChatContainer from '../components/ChatContainer'\r\nimport { useCookies } from 'react-cookie'\r\nimport axios from 'axios'\r\nimport black from \"../images/black_screen.jpg\"\r\nimport Dropdown from \"../components/UserFilter\"\r\nimport UserInfo from '../components/UserInfo'\r\n\r\nconst Dashboard = () => {\r\n    //     const [user, setUser] = useState(null)\r\n    //     const [fieldofUsers, setfieldofUsers] = useState(null)\r\n    //     const [lastDirection, setLastDirection] = useState()\r\n    //     const [filteron, setfilteron] = useState(true);\r\n    //     const [cookies, setCookie] = useCookies(['user'])\r\n    //     const [infoModel, setInfoModel] = React.useState(false)\r\n\r\n    //     const userId = cookies.UserId\r\n\r\n    //     const handleClick = () => {\r\n    //         setInfoModel(true)\r\n    //     }\r\n\r\n\r\n    //     const getUser = async () => {\r\n    //         try {\r\n    //             const response = await axios.get('http://localhost:8000/user', {\r\n    //                 params: { userId }\r\n    //             })\r\n    //             setUser(response.data)\r\n\r\n    //         } catch (error) {\r\n    //             console.log(error)\r\n    //         }\r\n    //     }\r\n    //     const getfieldofUsers = async () => {\r\n    //         try {\r\n    //             const response = await axios.get('http://localhost:8000/field-users', {\r\n    //                 params: { field: user?.field }\r\n    //             })\r\n    //             setfieldofUsers(response.data)\r\n\r\n    //         } catch (error) {\r\n    //             console.log(error)\r\n    //         }\r\n    //     }\r\n\r\n    //     useEffect(() => {\r\n    //         getUser()\r\n    //         //eslint-disable-next-line react-hooks/exhaustive-deps\r\n    //     }, [])\r\n\r\n    //     useEffect(() => {\r\n    //         if (user) {\r\n    //             getfieldofUsers()\r\n    //         }\r\n    //         //eslint-disable-next-line react-hooks/exhaustive-deps\r\n    //     }, [user]);\r\n\r\n\r\n    //     const updateMatches = async (matchedUserId) => {\r\n    //         try {\r\n    //             await axios.put('http://localhost:8000/addmatch', {\r\n    //                 userId,\r\n    //                 matchedUserId\r\n    //             })\r\n    //             getUser()\r\n\r\n    //         } catch (err) {\r\n    //             console.log(err)\r\n    //         }\r\n    //     }\r\n\r\n    //     const swiped = (direction, swipedUserId) => {\r\n    //         if (direction === 'right') {\r\n    //             updateMatches(swipedUserId)\r\n    //         }\r\n    //         setLastDirection(direction)\r\n    //     }\r\n\r\n    //     const outOfFrame = (name) => {\r\n    //         console.log(name + ' left the screen!')\r\n    //     }\r\n\r\n    //     const matchedUserIds = user?.matches.map(({ user_id }) => user_id).concat(userId)\r\n\r\n    //     const filteredUsers = fieldofUsers?.filter(fieldofUser => !matchedUserIds.includes(fieldofUser.user_id))\r\n\r\n    //     console.log('filteredGenderedUsers ', filteredUsers)\r\n    return (\r\n        <><h1>Hello</h1>\r\n            {/* {user &&\r\n                <div className=\"dashboard\">\r\n                    <ChatContainer user={user} />\r\n                    <div className=\"swipe-container\">\r\n                        <div className=\"card-container\">\r\n\r\n                            {filteredUsers?.map((fieldofUsers) =>\r\n                                <TinderCard\r\n                                    className=\"swipe\"\r\n                                    key={fieldofUsers.user_id}\r\n                                    preventSwipe={[\"up\", \"down\"]}\r\n                                    onSwipe={(dir) => swiped(dir, fieldofUsers.user_id)}\r\n                                    onCardLeftScreen={() => outOfFrame(fieldofUsers.name)}>\r\n                                    <div\r\n                                        style={{ backgroundImage: \"url(\" + black + \")\" }}\r\n                                        className=\"card\">\r\n\r\n                                        <img className='img-user'\r\n                                            src={fieldofUsers.url}\r\n                                            alt=\"new\"\r\n                                        />\r\n                                        <div><h3 className='info'>Name: {fieldofUsers.name}</h3></div>\r\n                                        <div><h3 className='info'>field of interest: {fieldofUsers.field}</h3></div>\r\n                                        <div><h3 className='info'>Work/Profession: {fieldofUsers.work}</h3></div>\r\n                                        <div><h3 className='info'>Skills: {fieldofUsers.skill.map((value) => (value.value + \" \"))}</h3></div>\r\n                                        <div>\r\n                                            <button className=\"primary-button\" onClick={handleClick}>Show Info</button>\r\n                                            {infoModel && (\r\n                                                <UserInfo setInfoModel={setInfoModel} />\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </TinderCard>\r\n                            )}\r\n                            <div className=\"swipe-info\">\r\n                                {lastDirection ? <p>You swiped {lastDirection}</p> : <p />}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {filteron && (\r\n                        <div className=\"filter\" style={{ backgroundColor: \"skyblue\" }}>\r\n                            <button\r\n                                type=\"button\"\r\n                                onClick={() => setfilteron(!filteron)}\r\n                            >\r\n                                Filter by -\r\n                            </button>\r\n                            <Dropdown placeHolder=\"Html\" />\r\n                        </div>\r\n                    )}\r\n                </div>} */}\r\n        </>\r\n    )\r\n}\r\nexport default Dashboard"],"mappings":";AAAA,OAAOA,UAAU,MAAM,mBAAmB;AAC1C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,aAAa,MAAM,6BAA6B;AACvD,SAASC,UAAU,QAAQ,cAAc;AACzC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,4BAA4B;AAC9C,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,QAAQ,MAAM,wBAAwB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACpB;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;;EAEA;;EAEA;EACA,oBACIH,OAAA,CAAAE,SAAA;IAAAE,QAAA,eAAEJ,OAAA;MAAAI,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAK,iBAqDb;AAEX,CAAC;AAAAC,EAAA,GAxIKN,SAAS;AAyIf,eAAeA,SAAS;AAAA,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}