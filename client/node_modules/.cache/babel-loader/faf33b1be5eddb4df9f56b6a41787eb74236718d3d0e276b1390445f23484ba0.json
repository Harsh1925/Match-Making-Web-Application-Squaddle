{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\VS_CODE\\\\Extra\\\\client\\\\src\\\\components\\\\Form\\\\Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\nimport useStyles from './styles';\nimport { createPost, updatePost, addIds } from '../../actions/posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = _ref => {\n  _s();\n  let {\n    currentId,\n    setCurrentId,\n    UserId\n  } = _ref;\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: '',\n    user_id: UserId\n  });\n  const post = useSelector(state => currentId ? state.posts.find(message => message._id === currentId) : null);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({\n      creator: '',\n      title: '',\n      message: '',\n      tags: '',\n      selectedFile: '',\n      user_id: UserId\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (currentId === 0) {\n      dispatch(createPost(postData));\n      dispatch(addIds(UserId, currentId));\n      clear();\n    } else {\n      dispatch(updatePost(currentId, postData));\n      clear();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: currentId ? `Editing \"${post.title}\"` : 'Creating a Memory'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"creator\",\n        variant: \"outlined\",\n        label: \"Creator\",\n        fullWidth: true,\n        value: postData.creator,\n        onChange: e => setPostData({\n          ...postData,\n          creator: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({\n          ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        multiline: true,\n        minRows: 4,\n        value: postData.message,\n        onChange: e => setPostData({\n          ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags (coma separated)\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({\n          ...postData,\n          tags: e.target.value.split(',')\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: _ref2 => {\n            let {\n              base64\n            } = _ref2;\n            return setPostData({\n              ...postData,\n              selectedFile: base64\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(Form, \"GmXEtFN4cilwfETH9hjRF6ZifSQ=\", false, function () {\n  return [useSelector, useDispatch, useStyles];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","Typography","Paper","useDispatch","useSelector","FileBase","useStyles","createPost","updatePost","addIds","jsxDEV","_jsxDEV","Form","_ref","_s","currentId","setCurrentId","UserId","postData","setPostData","creator","title","message","tags","selectedFile","user_id","post","state","posts","find","_id","dispatch","classes","clear","handleSubmit","e","preventDefault","className","paper","children","autoComplete","noValidate","root","form","onSubmit","variant","fileName","_jsxFileName","lineNumber","columnNumber","name","label","fullWidth","value","onChange","target","multiline","minRows","split","fileInput","type","multiple","onDone","_ref2","base64","buttonSubmit","color","size","onClick","_c","$RefreshReg$"],"sources":["D:/Study/VS_CODE/Extra/client/src/components/Form/Form.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FileBase from 'react-file-base64';\r\n\r\nimport useStyles from './styles';\r\nimport { createPost, updatePost, addIds } from '../../actions/posts';\r\n\r\nconst Form = ({ currentId, setCurrentId, UserId }) => {\r\n    const [postData, setPostData] = useState({ creator: '', title: '', message: '', tags: '', selectedFile: '', user_id: UserId });\r\n    const post = useSelector((state) => (currentId ? state.posts.find((message) => message._id === currentId) : null));\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        if (post) setPostData(post);\r\n    }, [post]);\r\n\r\n\r\n    const clear = () => {\r\n        setCurrentId(0);\r\n        setPostData({ creator: '', title: '', message: '', tags: '', selectedFile: '', user_id: UserId });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (currentId === 0) {\r\n            dispatch(createPost(postData));\r\n            dispatch(addIds(UserId, currentId));\r\n            clear();\r\n\r\n        } else {\r\n            dispatch(updatePost(currentId, postData));\r\n            clear();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n                <Typography variant=\"h6\">{currentId ? `Editing \"${post.title}\"` : 'Creating a Memory'}</Typography>\r\n                <TextField name=\"creator\" variant=\"outlined\" label=\"Creator\" fullWidth value={postData.creator} onChange={(e) => setPostData({ ...postData, creator: e.target.value })} />\r\n                <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\r\n                <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth multiline minRows={4} value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\r\n                <TextField name=\"tags\" variant=\"outlined\" label=\"Tags (coma separated)\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })} />\r\n                <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div>\r\n                <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\r\n                <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\r\n            </form>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default Form;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}