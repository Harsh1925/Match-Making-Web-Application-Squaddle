{"ast":null,"code":"import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE, ADDIDS } from '../constants/actionTypes';\nimport * as api from '../api/index.js';\nexport const getPosts = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchPosts();\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    console.log(post);\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const addIds = (UserId, post_id) => async dispatch => {\n  try {\n    const {\n      UserId,\n      post_id\n    } = await api.updatePost(UserId, post_id);\n    dispatch({\n      type: ADDIDS,\n      payload: UserId,\n      post_id\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    dispatch({\n      type: LIKE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};","map":{"version":3,"names":["FETCH_ALL","CREATE","UPDATE","DELETE","LIKE","ADDIDS","api","getPosts","dispatch","data","fetchPosts","type","payload","error","console","log","message","createPost","post","updatePost","id","addIds","UserId","post_id","likePost","deletePost"],"sources":["D:/Study/VS_CODE/Extra/client/src/actions/posts.js"],"sourcesContent":["import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE, ADDIDS } from '../constants/actionTypes';\r\n\r\nimport * as api from '../api/index.js';\r\n\r\nexport const getPosts = () => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.fetchPosts();\r\n\r\n        dispatch({ type: FETCH_ALL, payload: data });\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n\r\n};\r\n\r\nexport const createPost = (post) => async (dispatch) => {\r\n    try {\r\n        console.log(post)\r\n        const { data } = await api.createPost(post);\r\n\r\n        dispatch({ type: CREATE, payload: data });\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n};\r\n\r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.updatePost(id, post);\r\n\r\n        dispatch({ type: UPDATE, payload: data });\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n};\r\n\r\nexport const addIds = (UserId, post_id) => async (dispatch) => {\r\n    try {\r\n        const { UserId, post_id } = await api.updatePost(UserId, post_id);\r\n\r\n        dispatch({ type: ADDIDS, payload: UserId, post_id });\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n};\r\n\r\n\r\nexport const likePost = (id) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.likePost(id);\r\n\r\n        dispatch({ type: LIKE, payload: data });\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n};\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n    try {\r\n        await api.deletePost(id);\r\n\r\n        dispatch({ type: DELETE, payload: id });\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n};"],"mappings":"AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,IAAI,EAAEC,MAAM,QAAQ,0BAA0B;AAE1F,OAAO,KAAKC,GAAG,MAAM,iBAAiB;AAEtC,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM,MAAOC,QAAQ,IAAK;EAC9C,IAAI;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMH,GAAG,CAACI,UAAU,EAAE;IAEvCF,QAAQ,CAAC;MAAEG,IAAI,EAAEX,SAAS;MAAEY,OAAO,EAAEH;IAAK,CAAC,CAAC;EAChD,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;EAC9B;AAEJ,CAAC;AAED,OAAO,MAAMC,UAAU,GAAIC,IAAI,IAAK,MAAOV,QAAQ,IAAK;EACpD,IAAI;IACAM,OAAO,CAACC,GAAG,CAACG,IAAI,CAAC;IACjB,MAAM;MAAET;IAAK,CAAC,GAAG,MAAMH,GAAG,CAACW,UAAU,CAACC,IAAI,CAAC;IAE3CV,QAAQ,CAAC;MAAEG,IAAI,EAAEV,MAAM;MAAEW,OAAO,EAAEH;IAAK,CAAC,CAAC;EAC7C,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;EAC9B;AACJ,CAAC;AAED,OAAO,MAAMG,UAAU,GAAGA,CAACC,EAAE,EAAEF,IAAI,KAAK,MAAOV,QAAQ,IAAK;EACxD,IAAI;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMH,GAAG,CAACa,UAAU,CAACC,EAAE,EAAEF,IAAI,CAAC;IAE/CV,QAAQ,CAAC;MAAEG,IAAI,EAAET,MAAM;MAAEU,OAAO,EAAEH;IAAK,CAAC,CAAC;EAC7C,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;EAC9B;AACJ,CAAC;AAED,OAAO,MAAMK,MAAM,GAAGA,CAACC,MAAM,EAAEC,OAAO,KAAK,MAAOf,QAAQ,IAAK;EAC3D,IAAI;IACA,MAAM;MAAEc,MAAM;MAAEC;IAAQ,CAAC,GAAG,MAAMjB,GAAG,CAACa,UAAU,CAACG,MAAM,EAAEC,OAAO,CAAC;IAEjEf,QAAQ,CAAC;MAAEG,IAAI,EAAEN,MAAM;MAAEO,OAAO,EAAEU,MAAM;MAAEC;IAAQ,CAAC,CAAC;EACxD,CAAC,CAAC,OAAOV,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;EAC9B;AACJ,CAAC;AAGD,OAAO,MAAMQ,QAAQ,GAAIJ,EAAE,IAAK,MAAOZ,QAAQ,IAAK;EAChD,IAAI;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMH,GAAG,CAACkB,QAAQ,CAACJ,EAAE,CAAC;IAEvCZ,QAAQ,CAAC;MAAEG,IAAI,EAAEP,IAAI;MAAEQ,OAAO,EAAEH;IAAK,CAAC,CAAC;EAC3C,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;EAC9B;AACJ,CAAC;AAED,OAAO,MAAMS,UAAU,GAAIL,EAAE,IAAK,MAAOZ,QAAQ,IAAK;EAClD,IAAI;IACA,MAAMF,GAAG,CAACmB,UAAU,CAACL,EAAE,CAAC;IAExBZ,QAAQ,CAAC;MAAEG,IAAI,EAAER,MAAM;MAAES,OAAO,EAAEQ;IAAG,CAAC,CAAC;EAC3C,CAAC,CAAC,OAAOP,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;EAC9B;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}