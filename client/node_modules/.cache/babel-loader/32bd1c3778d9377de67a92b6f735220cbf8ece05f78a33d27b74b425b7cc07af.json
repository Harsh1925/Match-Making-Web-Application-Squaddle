{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\VS_CODE\\\\Extra\\\\client\\\\src\\\\components\\\\Form\\\\Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\nimport { createPost, updatePost } from '../../actions/posts';\nimport useStyles from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = _ref => {\n  _s();\n  let {\n    currentId,\n    setCurrentId,\n    UserId\n  } = _ref;\n  const [postData, setPostData] = useState({\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const post = useSelector(state => currentId ? state.posts.find(message => message._id === currentId) : null);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({\n      title: '',\n      message: '',\n      tags: '',\n      selectedFile: '',\n      user_id: UserId\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (currentId === 0) {\n      var _user$result;\n      dispatch(createPost({\n        ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name\n      }));\n      clear();\n    } else {\n      var _user$result2;\n      dispatch(updatePost(currentId, {\n        ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2.name\n      }));\n      clear();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: currentId ? `Editing \"${post.title}\"` : 'Creating a Memory'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({\n          ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        multiline: true,\n        rows: 4,\n        value: postData.message,\n        onChange: e => setPostData({\n          ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags (coma separated)\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({\n          ...postData,\n          tags: e.target.value.split(',')\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: _ref2 => {\n            let {\n              base64\n            } = _ref2;\n            return setPostData({\n              ...postData,\n              selectedFile: base64\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(Form, \"MReIPf178/ex0D6CLEoArnfnsIk=\", false, function () {\n  return [useSelector, useDispatch, useStyles];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","Typography","Paper","useDispatch","useSelector","FileBase","createPost","updatePost","useStyles","jsxDEV","_jsxDEV","Form","_ref","_s","currentId","setCurrentId","UserId","postData","setPostData","title","message","tags","selectedFile","post","state","posts","find","_id","dispatch","classes","user","JSON","parse","localStorage","getItem","clear","user_id","handleSubmit","e","preventDefault","_user$result","name","result","_user$result2","className","paper","children","autoComplete","noValidate","root","form","onSubmit","variant","fileName","_jsxFileName","lineNumber","columnNumber","label","fullWidth","value","onChange","target","multiline","rows","split","fileInput","type","multiple","onDone","_ref2","base64","buttonSubmit","color","size","onClick","_c","$RefreshReg$"],"sources":["D:/Study/VS_CODE/Extra/client/src/components/Form/Form.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FileBase from 'react-file-base64';\r\n\r\nimport { createPost, updatePost } from '../../actions/posts';\r\nimport useStyles from './styles';\r\n\r\nconst Form = ({ currentId, setCurrentId, UserId }) => {\r\n    const [postData, setPostData] = useState({ title: '', message: '', tags: '', selectedFile: '' });\r\n    const post = useSelector((state) => (currentId ? state.posts.find((message) => message._id === currentId) : null));\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n    const user = JSON.parse(localStorage.getItem('profile'));\r\n\r\n    useEffect(() => {\r\n        if (post) setPostData(post);\r\n    }, [post]);\r\n\r\n    const clear = () => {\r\n        setCurrentId(0);\r\n        setPostData({ title: '', message: '', tags: '', selectedFile: '', user_id: UserId });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (currentId === 0) {\r\n            dispatch(createPost({ ...postData, name: user?.result?.name }));\r\n            clear();\r\n        } else {\r\n            dispatch(updatePost(currentId, { ...postData, name: user?.result?.name }));\r\n            clear();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n                <Typography variant=\"h6\">{currentId ? `Editing \"${post.title}\"` : 'Creating a Memory'}</Typography>\r\n                <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\r\n                <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth multiline rows={4} value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\r\n                <TextField name=\"tags\" variant=\"outlined\" label=\"Tags (coma separated)\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })} />\r\n                <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div>\r\n                <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\r\n                <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\r\n            </form>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default Form;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,MAAM,EAAEC,UAAU,EAAEC,KAAK,QAAQ,mBAAmB;AACxE,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,QAAQ,MAAM,mBAAmB;AAExC,SAASC,UAAU,EAAEC,UAAU,QAAQ,qBAAqB;AAC5D,OAAOC,SAAS,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,IAAI,GAAGC,IAAA,IAAyC;EAAAC,EAAA;EAAA,IAAxC;IAAEC,SAAS;IAAEC,YAAY;IAAEC;EAAO,CAAC,GAAAJ,IAAA;EAC7C,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC;IAAEsB,KAAK,EAAE,EAAE;IAAEC,OAAO,EAAE,EAAE;IAAEC,IAAI,EAAE,EAAE;IAAEC,YAAY,EAAE;EAAG,CAAC,CAAC;EAChG,MAAMC,IAAI,GAAGnB,WAAW,CAAEoB,KAAK,IAAMV,SAAS,GAAGU,KAAK,CAACC,KAAK,CAACC,IAAI,CAAEN,OAAO,IAAKA,OAAO,CAACO,GAAG,KAAKb,SAAS,CAAC,GAAG,IAAK,CAAC;EAClH,MAAMc,QAAQ,GAAGzB,WAAW,EAAE;EAC9B,MAAM0B,OAAO,GAAGrB,SAAS,EAAE;EAC3B,MAAMsB,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC;EAExDpC,SAAS,CAAC,MAAM;IACZ,IAAIyB,IAAI,EAAEL,WAAW,CAACK,IAAI,CAAC;EAC/B,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,MAAMY,KAAK,GAAGA,CAAA,KAAM;IAChBpB,YAAY,CAAC,CAAC,CAAC;IACfG,WAAW,CAAC;MAAEC,KAAK,EAAE,EAAE;MAAEC,OAAO,EAAE,EAAE;MAAEC,IAAI,EAAE,EAAE;MAAEC,YAAY,EAAE,EAAE;MAAEc,OAAO,EAAEpB;IAAO,CAAC,CAAC;EACxF,CAAC;EAED,MAAMqB,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,EAAE;IAElB,IAAIzB,SAAS,KAAK,CAAC,EAAE;MAAA,IAAA0B,YAAA;MACjBZ,QAAQ,CAACtB,UAAU,CAAC;QAAE,GAAGW,QAAQ;QAAEwB,IAAI,EAAEX,IAAI,aAAJA,IAAI,wBAAAU,YAAA,GAAJV,IAAI,CAAEY,MAAM,cAAAF,YAAA,uBAAZA,YAAA,CAAcC;MAAK,CAAC,CAAC,CAAC;MAC/DN,KAAK,EAAE;IACX,CAAC,MAAM;MAAA,IAAAQ,aAAA;MACHf,QAAQ,CAACrB,UAAU,CAACO,SAAS,EAAE;QAAE,GAAGG,QAAQ;QAAEwB,IAAI,EAAEX,IAAI,aAAJA,IAAI,wBAAAa,aAAA,GAAJb,IAAI,CAAEY,MAAM,cAAAC,aAAA,uBAAZA,aAAA,CAAcF;MAAK,CAAC,CAAC,CAAC;MAC1EN,KAAK,EAAE;IACX;EACJ,CAAC;EAED,oBACIzB,OAAA,CAACR,KAAK;IAAC0C,SAAS,EAAEf,OAAO,CAACgB,KAAM;IAAAC,QAAA,eAC5BpC,OAAA;MAAMqC,YAAY,EAAC,KAAK;MAACC,UAAU;MAACJ,SAAS,EAAG,GAAEf,OAAO,CAACoB,IAAK,IAAGpB,OAAO,CAACqB,IAAK,EAAE;MAACC,QAAQ,EAAEd,YAAa;MAAAS,QAAA,gBACrGpC,OAAA,CAACT,UAAU;QAACmD,OAAO,EAAC,IAAI;QAAAN,QAAA,EAAEhC,SAAS,GAAI,YAAWS,IAAI,CAACJ,KAAM,GAAE,GAAG;MAAmB;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAc,eACnG9C,OAAA,CAACX,SAAS;QAAC0C,IAAI,EAAC,OAAO;QAACW,OAAO,EAAC,UAAU;QAACK,KAAK,EAAC,OAAO;QAACC,SAAS;QAACC,KAAK,EAAE1C,QAAQ,CAACE,KAAM;QAACyC,QAAQ,EAAGtB,CAAC,IAAKpB,WAAW,CAAC;UAAE,GAAGD,QAAQ;UAAEE,KAAK,EAAEmB,CAAC,CAACuB,MAAM,CAACF;QAAM,CAAC;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAClK9C,OAAA,CAACX,SAAS;QAAC0C,IAAI,EAAC,SAAS;QAACW,OAAO,EAAC,UAAU;QAACK,KAAK,EAAC,SAAS;QAACC,SAAS;QAACI,SAAS;QAACC,IAAI,EAAE,CAAE;QAACJ,KAAK,EAAE1C,QAAQ,CAACG,OAAQ;QAACwC,QAAQ,EAAGtB,CAAC,IAAKpB,WAAW,CAAC;UAAE,GAAGD,QAAQ;UAAEG,OAAO,EAAEkB,CAAC,CAACuB,MAAM,CAACF;QAAM,CAAC;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAC7L9C,OAAA,CAACX,SAAS;QAAC0C,IAAI,EAAC,MAAM;QAACW,OAAO,EAAC,UAAU;QAACK,KAAK,EAAC,uBAAuB;QAACC,SAAS;QAACC,KAAK,EAAE1C,QAAQ,CAACI,IAAK;QAACuC,QAAQ,EAAGtB,CAAC,IAAKpB,WAAW,CAAC;UAAE,GAAGD,QAAQ;UAAEI,IAAI,EAAEiB,CAAC,CAACuB,MAAM,CAACF,KAAK,CAACK,KAAK,CAAC,GAAG;QAAE,CAAC;MAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAC1L9C,OAAA;QAAKkC,SAAS,EAAEf,OAAO,CAACoC,SAAU;QAAAnB,QAAA,eAACpC,OAAA,CAACL,QAAQ;UAAC6D,IAAI,EAAC,MAAM;UAACC,QAAQ,EAAE,KAAM;UAACC,MAAM,EAAEC,KAAA;YAAA,IAAC;cAAEC;YAAO,CAAC,GAAAD,KAAA;YAAA,OAAKnD,WAAW,CAAC;cAAE,GAAGD,QAAQ;cAAEK,YAAY,EAAEgD;YAAO,CAAC,CAAC;UAAA;QAAC;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eAC9J9C,OAAA,CAACV,MAAM;QAAC4C,SAAS,EAAEf,OAAO,CAAC0C,YAAa;QAACnB,OAAO,EAAC,WAAW;QAACoB,KAAK,EAAC,SAAS;QAACC,IAAI,EAAC,OAAO;QAACP,IAAI,EAAC,QAAQ;QAACR,SAAS;QAAAZ,QAAA,EAAC;MAAM;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eACjI9C,OAAA,CAACV,MAAM;QAACoD,OAAO,EAAC,WAAW;QAACoB,KAAK,EAAC,WAAW;QAACC,IAAI,EAAC,OAAO;QAACC,OAAO,EAAEvC,KAAM;QAACuB,SAAS;QAAAZ,QAAA,EAAC;MAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAChG;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AAEhB,CAAC;AAAC3C,EAAA,CAzCIF,IAAI;EAAA,QAEOP,WAAW,EACPD,WAAW,EACZK,SAAS;AAAA;AAAAmE,EAAA,GAJvBhE,IAAI;AA2CV,eAAeA,IAAI;AAAC,IAAAgE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}