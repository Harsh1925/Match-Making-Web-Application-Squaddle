{"ast":null,"code":"import { FETCH_ALL, FETCH_BY_SEARCH, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\nexport default (function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    isLoading: true,\n    posts: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case FETCH_ALL:\n      return action.payload;\n    case FETCH_BY_SEARCH:\n      return {\n        ...state,\n        posts: action.payload.data\n      };\n    case 'END_LOADING':\n      return {\n        ...state,\n        isLoading: false\n      };\n    case LIKE:\n      return posts.map(post => post._id === action.payload._id ? action.payload : post);\n    case CREATE:\n      return [...posts, action.payload];\n    case UPDATE:\n      return posts.map(post => post._id === action.payload._id ? action.payload : post);\n    case DELETE:\n      return posts.filter(post => post._id !== action.payload);\n    default:\n      return posts;\n  }\n});","map":{"version":3,"names":["FETCH_ALL","FETCH_BY_SEARCH","CREATE","UPDATE","DELETE","LIKE","state","arguments","length","undefined","isLoading","posts","action","type","payload","data","map","post","_id","filter"],"sources":["D:/Study/VS_CODE/Extra/client/src/reducers/posts.js"],"sourcesContent":["import { FETCH_ALL, FETCH_BY_SEARCH, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\r\n\r\nexport default (state = { isLoading: true, posts: [] }, action) => {\r\n    switch (action.type) {\r\n        case FETCH_ALL:\r\n            return action.payload;\r\n        case FETCH_BY_SEARCH:\r\n            return { ...state, posts: action.payload.data };\r\n        case 'END_LOADING':\r\n            return { ...state, isLoading: false };\r\n        case LIKE:\r\n            return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\r\n        case CREATE:\r\n            return [...posts, action.payload];\r\n        case UPDATE:\r\n            return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\r\n        case DELETE:\r\n            return posts.filter((post) => post._id !== action.payload);\r\n        default:\r\n            return posts;\r\n    }\r\n};\r\n\r\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,eAAe,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,IAAI,QAAQ,0BAA0B;AAEnG,gBAAe,YAAoD;EAAA,IAAnDC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG;IAAEG,SAAS,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAG,CAAC;EAAA,IAAEC,MAAM,GAAAL,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC1D,QAAQG,MAAM,CAACC,IAAI;IACf,KAAKb,SAAS;MACV,OAAOY,MAAM,CAACE,OAAO;IACzB,KAAKb,eAAe;MAChB,OAAO;QAAE,GAAGK,KAAK;QAAEK,KAAK,EAAEC,MAAM,CAACE,OAAO,CAACC;MAAK,CAAC;IACnD,KAAK,aAAa;MACd,OAAO;QAAE,GAAGT,KAAK;QAAEI,SAAS,EAAE;MAAM,CAAC;IACzC,KAAKL,IAAI;MACL,OAAOM,KAAK,CAACK,GAAG,CAAEC,IAAI,IAAMA,IAAI,CAACC,GAAG,KAAKN,MAAM,CAACE,OAAO,CAACI,GAAG,GAAGN,MAAM,CAACE,OAAO,GAAGG,IAAK,CAAC;IACzF,KAAKf,MAAM;MACP,OAAO,CAAC,GAAGS,KAAK,EAAEC,MAAM,CAACE,OAAO,CAAC;IACrC,KAAKX,MAAM;MACP,OAAOQ,KAAK,CAACK,GAAG,CAAEC,IAAI,IAAMA,IAAI,CAACC,GAAG,KAAKN,MAAM,CAACE,OAAO,CAACI,GAAG,GAAGN,MAAM,CAACE,OAAO,GAAGG,IAAK,CAAC;IACzF,KAAKb,MAAM;MACP,OAAOO,KAAK,CAACQ,MAAM,CAAEF,IAAI,IAAKA,IAAI,CAACC,GAAG,KAAKN,MAAM,CAACE,OAAO,CAAC;IAC9D;MACI,OAAOH,KAAK;EAAC;AAEzB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}